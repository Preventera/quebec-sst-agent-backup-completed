# .gitlab-ci.yml - Pipeline CI/CD pour AgenticSST Qu√©bec‚Ñ¢
stages:
  - test
  - build
  - deploy

variables:
  NODE_VERSION: "18"
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .npm/

test:lint:
  stage: test
  image: node:18-alpine
  before_script:
    - npm install
  script:
    - echo "üîç V√©rification du code..."
    - npm run lint || echo "Lint non configur√© - ignor√©"
    - npm run type-check || echo "TypeScript check non configur√© - ignor√©"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "develop"

test:build:
  stage: test
  image: node:18-alpine
  before_script:
    - npm install
  script:
    - echo "üèóÔ∏è Test de build..."
    - npm run build
  artifacts:
    paths:
      - dist/
    expire_in: 1 hour
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "develop"

build:docker:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo "üê≥ Construction de l'image Docker..."
    - docker build -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE
    - docker tag $DOCKER_IMAGE $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "develop"

deploy:netlify:
  stage: deploy
  image: node:18-alpine
  before_script:
    - npm install
    - npm install -g netlify-cli
  script:
    - echo "üöÄ D√©ploiement vers Netlify..."
    - npm run build
    - netlify deploy --prod --dir=dist --auth=$NETLIFY_AUTH_TOKEN --site=$NETLIFY_SITE_ID
    - echo "‚úÖ AgenticSST Qu√©bec‚Ñ¢ d√©ploy√© avec succ√®s !"
    - echo "üåê URL Production: https://agenticsstquebec.netlify.app"
  environment:
    name: production
    url: https://agenticsstquebec.netlify.app
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

deploy:staging:
  stage: deploy
  image: node:18-alpine
  before_script:
    - npm install
    - npm install -g netlify-cli
  script:
    - echo "üöÄ D√©ploiement vers staging..."
    - npm run build
    - netlify deploy --dir=dist --auth=$NETLIFY_AUTH_TOKEN --site=$NETLIFY_SITE_ID
    - echo "‚úÖ Staging d√©ploy√© avec succ√®s !"
  environment:
    name: staging
    url: https://staging.agenticsstquebec.netlify.app
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"